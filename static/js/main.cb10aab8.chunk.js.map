{"version":3,"sources":["components/SearchBar/fields.js","components/SearchBar/SearchBar.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","initialState.js","fetch/fetch.js","App.js","index.js"],"names":["fields","query","className","type","autoComplete","autoFocus","placeholder","SearchBar","submit","useState","searchValue","setSearchValue","onSubmit","e","preventDefault","onChange","target","value","ImageGallery","data","modalOpen","map","src","webformatURL","alt","tags","onClick","largeImageURL","id","Button","clicker","Modal","children","modalClose","useEffect","window","addEventListener","closeModals","removeEventListener","code","Loader","color","height","width","timeout","initialState","searchQuery","searchResult","page","loading","modal","largeImage","error","instance","axios","create","baseURL","params","key","createParams","getPosts","per_page","q","get","App","state","setState","fetchPosts","a","dataResult","hits","length","Error","message","img","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb10aab8.chunk.js","sourcesContent":["\r\nconst fields = {\r\n    query: {\r\n        className: \"SearchForm-input\",\r\n        type: \"text\",\r\n        autoComplete: \"off\",\r\n        autoFocus: true,\r\n        placeholder: \"Search images and photos\"\r\n    }\r\n   } \r\n\r\nexport default fields","import { useState } from 'react'\r\nimport fields from \"./fields\"\r\n\r\nexport default function SearchBar ({submit}) {\r\n\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      submit(searchValue)\r\n      setSearchValue(\"\")\r\n    }\r\n    \r\n    const handleChange = (e) => {\r\n      return setSearchValue(e.target.value)\r\n    }\r\n\r\n      \r\n        return(\r\n            <header className=\"Searchbar\">\r\n            <form className=\"SearchForm\"\r\n                onSubmit={handleSubmit}\r\n            >\r\n              <button type=\"submit\" className=\"SearchForm-button\">\r\n                <span className=\"SearchForm-button-label\">Search</span>\r\n              </button>\r\n                  <input\r\n                  {...fields.query}\r\n                  onChange={handleChange}\r\n                  value={searchValue}\r\n                  />\r\n              \r\n            </form>\r\n            </header>  \r\n        )\r\n}\r\n\r\n","import PropTypes from 'prop-types'\r\n\r\nconst ImageGallery = ({data, modalOpen}) => {   \r\n            return (\r\n                <div>\r\n                    <ul className=\"ImageGallery\">\r\n                    {data.map(e=>{return <li className=\"ImageGalleryItem\" key={e.id} >\r\n                    <img src={e.webformatURL} alt={e.tags} className=\"ImageGalleryItem-image\" onClick={()=>modalOpen(e.largeImageURL,e.tags)}/>\r\n                     </li>})}\r\n                    </ul>\r\n                </div>\r\n            )\r\n            }  \r\n\r\n\r\nexport default ImageGallery\r\n\r\n\r\nImageGallery.propTypes={\r\n    data:PropTypes.arrayOf(PropTypes.shape(\r\n        {id:PropTypes.number,\r\n        webformatURL:PropTypes.string.isRequired,\r\n        tags:PropTypes.string.isRequired,\r\n        largeImageURL:PropTypes.string.isRequired,\r\n        })),\r\n    modalOpen:PropTypes.func.isRequired,\r\n    galleryList:PropTypes.shape({current:PropTypes.instanceOf(Element)})\r\n  }","import PropTypes from 'prop-types'\r\n\r\nconst Button = ({clicker}) => {\r\nreturn (\r\n    <button onClick={clicker} className=\"Button\">load more</button>\r\n)\r\n}\r\n\r\nexport default Button\r\n\r\nButton.propTypes = {\r\n    clicker:PropTypes.func.isRequired,\r\n}","import React, { useEffect } from 'react'\r\n\r\n\r\nexport default function Modal ({children, modalClose}) {\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown',closeModals)\r\n            return () =>{\r\n        window.removeEventListener('keydown',closeModals)\r\n     }})\r\n     \r\n    const closeModals = (e) => {\r\n           if (e.code === \"Escape\") {\r\n              modalClose();\r\n            }\r\n        }\r\n\r\n    return (\r\n        \r\n        <div className=\"Overlay\" onClick={modalClose}>\r\n        <div className=\"Modal\">\r\n            {children}\r\n        </div>\r\n        </div>\r\n    )\r\n}","import Loaders from \"react-loader-spinner\";\r\n\r\nconst Loader = () => {\r\n    return    <Loaders type=\"Puff\"\r\n    color=\"#00BFFF\"\r\n    height={100}\r\n    width={100}\r\n    timeout={3000} //3 secs\r\n    />\r\n}\r\n\r\nexport default Loader","const initialState = {\r\n    searchQuery:\"\",\r\n    searchResult: [],\r\n    page:1,\r\n    loading:false,\r\n    modal:false,\r\n    largeImage:\"\",\r\n    error:null,\r\n    tags:\"\",\r\n  }\r\n\r\nexport default initialState","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://pixabay.com/api/\",\r\n    params: {\r\n        key: \"23372923-aa63da10459dab2a89fc14fe7\"\r\n    }\r\n    \r\n});\r\n\r\nconst createParams = (params) => {\r\n    return {\r\n        params\r\n    }\r\n};\r\n\r\nconst  getPosts = (page = 1, per_page = 3, q = \"cat\" )=> {\r\n    return instance.get(\"/\", createParams({q, per_page, page}));\r\n}\r\nexport default getPosts","import { useState, useEffect} from 'react'\r\n\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport ImageGallery from './components/ImageGallery/ImageGallery';\r\nimport Button from './components/Button/Button';\r\nimport Modal from './components/Modal/Modal';\r\nimport Loader from './components/Loader/Loader';\r\n\r\nimport initialState from './initialState';\r\nimport getPosts from './fetch/fetch';\r\n\r\n\r\nexport default function App () {\r\n\r\n  const [state, setState] = useState({...initialState})\r\n\r\n  const fetchPosts = async ()=> {\r\n      const {page, searchQuery} = state;\r\n      \r\n      try {\r\n        const {data} = await getPosts(page, 12, searchQuery)\r\n    const dataResult = data.hits;\r\n        if (!dataResult.length) {\r\n           throw new Error(\"Nothing found, try something else.\")\r\n        }\r\n        return setState(({searchResult, page})=> {\r\n          return {...state,\r\n            searchResult:[...searchResult,...dataResult],\r\n            loading:false, \r\n            page: page +1}\r\n            }\r\n            )\r\n      }\r\n      catch (error) {\r\n         setState({error: error.message, loading:false})\r\n      }\r\n\r\n    }\r\n  const searchQuery = (query) => {\r\n    setState({...initialState,searchQuery:query,loading:true})\r\n  }\r\n  const loadMore = () => setState(\r\n    ()=>{console.log(state.searchQuery)\r\n    return {...state, loading: true}}\r\n    \r\n    )\r\n\r\n  const modalOpen = (img,tags) => setState({tags:tags,largeImage:img,modal:true})\r\n\r\n  const modalClose = () => setState({modal:false})\r\n\r\n  useEffect(() => {\r\n    const {searchQuery, page, loading} = state\r\n\r\n    if (loading && (searchQuery || page >1 )){fetchPosts()}\r\n        \r\n  },[searchQuery, state.page])\r\n\r\n  \r\n    const {largeImage,searchResult,loading,modal,error,tags} = state\r\n    return (\r\n      <div>\r\n        <SearchBar submit={searchQuery}/>\r\n        {searchResult && <ImageGallery data={searchResult} modalOpen={modalOpen}/>}\r\n        {error && <p className=\"Error\">{error}</p>}\r\n        {(searchResult?.length >= 1)&& <Button clicker={loadMore}/>}\r\n        {loading && <Loader/>}\r\n        {modal && \r\n        <Modal modalClose={modalClose}>\r\n        <img \r\n        src={largeImage} \r\n        alt={tags} \r\n        onClick={()=>modalClose()}  />\r\n        </Modal>}\r\n      </div>\r\n    )\r\n  \r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}